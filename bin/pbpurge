#!/bin/sh

# ENV must contain PINBOARD_AUTH_TOKEN, found at https://pinboard.in/settings/password
[[ "$PINBOARD_AUTH_TOKEN" ]] || echo "Error: No PINBOARD_AUTH_TOKEN defined." && echo "Find yours at https://pinboard.in/settings/password." && exit 1

# display in frightening yellow
function shw_warn { printf '\033[1;33m'"$1"'\033[0m'; }

# precompute API calls
USER=$(printf "$PINBOARD_AUTH_TOKEN" | cut -d':' -f 1)
USER_TEMP_URL="https://pinboard.in/u:$USER/t:temp/"
GET_TEMP_BOOKMARKS="curl --silent https://api.pinboard.in/v1/posts/all?auth_token=$PINBOARD_AUTH_TOKEN&format=json&tag=temp"
DELETE_BOOKMARK="curl -G --silent https://api.pinboard.in/v1/posts/delete --data-urlencode url=% --data format=json --data auth_token=$PINBOARD_AUTH_TOKEN"

# clear out a temp file to use
tmpfile="/tmp/net.cormacrelf.pbpurge"
echo -n > $tmpfile

# store just the href and description for user prompting
$GET_TEMP_BOOKMARKS | jq '.[] | {href, description}' > $tmpfile

TO_DELETE=$(jq '{}' $tmpfile | wc -l)
[[ "$TO_DELETE" == 0  ]] && echo "No bookmarks to delete." && exit 0

echo $(shw_warn "The following bookmarks will be deleted:") "see $USER_TEMP_URL"
echo

# pretty print descriptions and urls
cat $tmpfile | jq '. | @text "\(.description):\n    \(.href)"' | xargs -n1 -I x printf "x\n"
echo

if [[ ! "$1" == "-f" ]]; then
    confirmation=$(shw_warn "=> Are you sure? [yN] ")
    read -p "$confirmation" -n 1 -r
    echo    # (optional) move to a new line
    if [[ ! "$REPLY" =~ ^[Yy]$ ]]
    then
        exit 1
    fi
fi

COUNT=$(cat $tmpfile | jq '.href' | xargs -I % -E \n -n1 $DELETE_BOOKMARK | grep "done" | wc -l)
echo "$COUNT temp bookmark(s) deleted."

